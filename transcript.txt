
--- Chunk 1 ---
This may be the fastest way to deploy a Python application online. And I'm talking about just clicking a few buttons fast. In this video, we are going to accomplish three different things. One, we want to make a new Vercel account. Two, we want to add our new FastAPI application to that Vercel account. Three, we want to deploy this application. And we can do this entirely free. I'm talking like $0.00 per month free. And if I can promise one thing, if you stick to the end of this video, your app will be deployed live. So let's dive in. All right. So I have an empty directory. So the very first thing I'm going to do is create a new folder called API. And now inside this folder, let's go ahead and say new file. We're going to name this main.py. Inside our main.py, we are going to say from FastAPI, import FastAPI, app equals FastAPI, and then we're going to have an empty endpoint that is more or less a health check for our application that says the health check is successful. Now the next thing that we want to do is create a requirements.txt file. And inside here, the two requirements are FastAPI and uvicorn. Now these are the only two dependencies that we need for FastAPI application because our application is pretty small. It just returns the health check is successful when it runs successfully. Now the next thing that we need to add is a vercel.json. So we can say vercel.json. This is going to have all the requirements that we need for our environment to know how to build and create the routes that are needed. So when we add in this new object that says builds, that is a list of a single object, source is where our application starts. And we know it starts in our API folder into our main.py file. We are going to be using the latest version of Python, which by default, Vercel uses the latest version. So if you're using a different version of Python, when you deploy this application, it will go to the newest version of Python. Now for the routes, the source, this is more or less a wildcard that will allow us to consume different endpoints. And then destination is again inside our API folder, our main.py file. Now once you add these three things, you need to go to the vercel.com and create your free account. Once you create your free account, your starting screen will look something like this, where you're going to have your projects, which I am under hobby and hobby is the free tier. And as you can see, we don't have any projects currently running. So once you create this, go ahead and go back into your IDE, where we need to install the latest CLI from Vercel. Now, Node Package Manager is part of Node. So you need to go ahead and install Node on your machine if you haven't already. And I will leave a link below to the Node website so you can download everything you need to be able to run this command. What we're going to be doing is in PMI, I stands for install-g, which is global Vercel. This will install the CLI for us. After you install Vercel, you need to log into your account. After you log into your account through your CLI, so when I say log into your account, you got to log in through your Vercel CLI. After you do that, all you have to do is vercel. And that's it. It's going to say it's going to create a deployment for us for our Vercel Fast API. We want to say yes. Where do we want to deploy it? We want to deploy it under, mine's called EJ Roby's project, which is the hobby free tier. Link to existing project, no. What's your project's name? I'm just going to use Vercel Fast API. That's the default name of your project. And in which directory does your code live or is located? Just the root folder. So I'm going to press enter right there. After doing this, we can see that is going to start building our project. And then once it's built, go into our projects. If we refresh the screen, we can see our new Vercel Fast API. But now if we go in it and we say open up in a new tab and we want to visit it, we can see our application is down. And this is a current bug that's happening right now in Vercel. So hopefully you don't have to deal with this. But if you do, all you have to do is go back into your application, go into settings, scroll down until you can see Node.js version. Change this to 18x, click save. And now what you need to do is go back into your application and redeploy. And to redeploy, all you got to do is Vercel. Because we already set up all the information ahead of time. So now it's going to build, it's going to deploy. And now if we go back into our application, I'm going to close out of that tab. I'm going to go back into our deployment. So this deployment is still broken. We need to go back into our application. And we want to open up our last deployment, which was just 30 seconds ago. And let's go ahead and open up the one that just deployed. Not our last, not the first one. They're both going to be live. Make sure you open up the last one. If we click visit, it's going to authenticate. And we can see that our application is live. The health check is successful. And there you have it. We have our application able to be seen. And we have it deployed on Vercel. Super fast, super easy. And if you want to learn more about FastAPI, go ahead and check out this video somewhere. And I'll see you in the next.